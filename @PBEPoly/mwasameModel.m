function dX = mwasameModel(obj, t, X, shear_rate, logintMu)
% Microstructure evolution through population balances   
    dX = zeros(size(X));

    phi_a = obj.cnst.phi_p*(X(1)/obj.par.m_p)^(1-3/obj.par.d_f);
    nu      = X(1);

        % Brownian aggregation term
        brownianAggregation = ...
            -2 * cutOff(obj, phi_a) * obj.cnst.k_b * obj.cnst.T * obj.cnst.phi_p ...
           ./( 2 * obj.cnst.mu_s * eta(obj, phi_a, logintMu) * obj.par.W * pi * obj.cnst.a_p^3) ...
           .* (nu/obj.par.m_p)^(2)*obj.par.m_p;

       % Shear aggregation term
        shearAggregation = ...
            -4 * cutOff(obj, phi_a) * obj.par.alfa ...
            .* (obj.cnst.phi_p/pi) ...
            .* (nu/obj.par.m_p).^(2 - 3/obj.par.d_f) ...
            .* abs(shear_rate)*obj.par.m_p;

        % Shear breakage term
        shearBreakage = ...
            obj.par.b_0 ...
            * ((nu/obj.par.m_p)^(1 - 1/obj.par.d_f) ...
            - obj.par.m_p^(1/obj.par.d_f)*(nu/obj.par.m_p)) ...
            * abs(shear_rate).^2*obj.par.m_p;

        % ODE for dphi_a/dt
        dX(1) = (brownianAggregation + ...
                shearAggregation + ...
                shearBreakage);
end