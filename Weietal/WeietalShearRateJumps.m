initial.EXITFLAG = 1;
initial.logintMu = interp1(shear_rate, logintMu, 100);
initial.stress = interp1(shear_rate, stress, 100);
initial.A = 1;

jump2 = stressJump(5,initial, obj);
jump3 = stressJump(10,initial, obj);
jump4 = stressJump(20,initial, obj);
jump5 = stressJump(40,initial, obj);
jump6 = stressJump(80,initial, obj);
jump7 = stressJump(600,initial, obj);

%% Plot
semilogx(jump2.time, jump2.stress/jump2.stress(end), ...
    jump3.time, jump3.stress/jump2.stress(end), ...
    jump4.time, jump4.stress/jump2.stress(end), ...
    jump5.time, jump5.stress/jump2.stress(end), ...
    jump6.time, jump6.stress/jump2.stress(end), ...
    jump7.time, jump7.stress/jump2.stress(end),...
    'LineWidth',3);

hold on

semilogx(experimentaldataS3(:,1),experimentaldataS3(:,2), ...
    experimentaldataS3(:,3),experimentaldataS3(:,4), ...
    experimentaldataS3(:,5),experimentaldataS3(:,6), ...
    experimentaldataS3(:,7),experimentaldataS3(:,8), ...
    experimentaldataS3(:,9),experimentaldataS3(:,10), ...
    experimentaldataS3(:,11),experimentaldataS3(:,12), ...
    experimentaldataS3(:,13),experimentaldataS3(:,14) ...
)

function jump = stressJump(delta_t, initial, obj)

time_jump = @(t) logspace(-3,log10(t));

jump = stepShear(obj, 100, 0.5, time_jump(delta_t), initial);
initial2.logintMu = jump.logintMu(end,:);
initial2.stress = jump.stress(end);
initial2.A = 1;
jump = stepShear(obj, 0.5, 5, time_jump(400), initial2);
end